{"version":3,"sources":["utils/AuthService.js","Components/Auth/Signup.jsx","Components/Auth/Login.jsx","Components/Burger/Burger.jsx","Components/Menu/Menu.jsx","Components/NavBar/NavBar.jsx","utils/RestaurantsService.js","utils/LikesService.js","Components/RestaurantDetails/RestaurantDetails.jsx","actions/actionType.js","actions/action.js","actions/fetchData.js","Components/RestaurantPhoto/RestaurantPhoto.jsx","Components/RestaurantGrid/RestaurantGrid.jsx","Components/Search/Search.jsx","Components/Favourites/Favourites.jsx","Components/Edit/Edit.jsx","App.js","serviceWorker.js","reducers/reducers.js","reducers/auth-reducers.js","reducers/rootReducers.js","index.js"],"names":["AuthService","signup","username","password","service","post","then","response","data","login","loggedin","get","logout","catch","err","console","log","this","axios","create","baseURL","process","withCredentials","Signup","props","handleFormSubmit","event","preventDefault","state","validateUsername","validatePassword","setState","getUser","user","history","push","error","message","handleChange","target","name","value","match","invalidUsername","invalidPassword","className","to","onSubmit","type","placeholder","onChange","e","Component","withRouter","Login","goBack","connect","authentication","StyledBurger","styled","button","open","Burger","setOpen","onClick","icon","faBars","size","StyledMenu","nav","Menu","NavBar","title","React","useState","faHome","faStar","faSearch","faSignOutAlt","faUserCircle","RestaurantsService","getAll","getOne","id","newRestaurant","neighborhood","photograph","location","image","cuisine_type","timetable","reviews","removeRestaurant","restaurant","editRestaurant","LikesService","updateUserLike","updatedUserObj","removeUserLike","RestaurantDetails","printReviews","daily","params","useParams","restaurantId","restaurants","likes","useHistory","userLocal","setUser","setRestaurant","hidden","setHidden","comments","setComments","favourite","setFavourite","useEffect","includes","length","map","el","Object","keys","key","i","src","alt","faChevronCircleUp","faChevronCircleDown","toggleButton","faCheckCircle","faCircle","FETCH_DATA_REQUEST","FETCH_DATA_SUCCESS","FETCH_DATA_ERROR","fetchDataRequest","fetchDataSuccess","fetchDataError","payload","RestaurantPhoto","place","products","Search","filteredRestaurants","search","setSearch","filter","toLowerCase","FavouriteRestaurants","render","favourites","setFavourites","list","loading","App","userObj","loggedInUser","fetchUser","dispatch","exact","path","Boolean","window","hostname","initialState","reducer","action","JSON","parse","localStorage","getItem","loggedIn","combineReducers","loggingIn","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f07b004d.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default class AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_URL}/auth`,\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', {username, password})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentuser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => {\n      return response.data\n    })\n    .catch(err=>console.log(err))\n  }\n}","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport AuthService from \"../../utils/AuthService\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.scss\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n    };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const { username, password } = this.state;\n\n    this.validateUsername(username);\n    this.validatePassword(password);\n\n    this.service\n      .signup(username, password)\n      .then(response => {\n        this.setState({\n          username: \"\",\n          password: \"\",\n        });\n        this.props.getUser(response.user);\n        this.props.history.push(\"/\");\n      })\n      .catch(error => {\n        console.log(error.message);\n        this.setState({\n          username: username,\n          password: password,\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  validateUsername = username => {\n    // eslint-disable-next-line\n    let usernameFormat = /^\\w{3,12}$/;\n\n    if (username.match(usernameFormat)) {\n      return;\n    }\n\n    this.setState({\n      ...this.state,\n      invalidUsername: \"Invalid username\"\n    });\n  };\n\n  validatePassword = password => {\n    let passFormat = /^(?=.*[0-9])(?=.*[a-zA-Z])\\w{8,16}$/;\n\n    if (password.match(passFormat)) {\n      return;\n    }\n\n    this.setState({\n      ...this.state,\n      invalidPassword:\n        \"The password must contain from 8 to 16 characters and at least 1 digit and character\"\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"user-container\">\n        <div className=\"user-options\">\n          <div className=\"flex\">\n          <div className=\"user-option selected\">\n            <Link className=\"link\" to=\"/signup\">\n              New here\n            </Link>\n          </div>\n          <div className=\"user-option\">\n            <Link className=\"link\" to=\"/login\">\n              Already user\n            </Link>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"user-login flex-column\">\n        <h3>Sign up using your username</h3>\n\n        <form className=\"signup-form\" onSubmit={this.handleFormSubmit}>\n          <div className=\"flex-column\">\n            <fieldset>\n              <label>Username:</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"userN...\"\n                value={this.state.username}\n                onChange={e => this.handleChange(e)}\n              />\n            </fieldset>\n\n            <p>\n              {this.state.invalidUsername\n                ? `${this.state.invalidUsername}`\n                : \"\"}\n            </p>\n\n            <fieldset>\n              <label>Password:</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"********\"\n                value={this.state.password}\n                onChange={e => this.handleChange(e)}\n              />\n            </fieldset>\n\n            <p>\n              {this.state.invalidPassword\n                ? `${this.state.invalidPassword}`\n                : \"\"}\n            </p>\n          </div>\n\n          <input className=\"submit-signup\" type=\"submit\" value=\"Sign up\" />\n        </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Signup);\n","import React, { Component } from \"react\";\nimport AuthService from \"../../utils/AuthService\";\nimport { withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n// import { login } from \"../../actions/fetchUser\";\nimport \"./Login.scss\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service\n      .login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response);\n        this.props.history.goBack();\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div className=\"user-container\">\n        <div className=\"user-options\">\n          <div className=\"flex\">\n          <div className=\"user-option\">\n            <Link className=\"link\" to=\"/signup\">\n              New here\n            </Link>\n          </div>\n          <div className=\"user-option selected\">\n            <Link className=\"link\" to=\"/login\">\n              Already user\n            </Link>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"user-login flex-column\">\n          <h3>Sign In with username</h3>\n\n          <form className=\"signup-form\" onSubmit={this.handleFormSubmit}>\n            <div className=\"flex-column\">\n              <fieldset className=\"flex-column\">\n                <label>Username:</label>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={e => this.handleChange(e)}\n                />\n              </fieldset>\n\n              <fieldset className=\"flex-column\">\n                <label>Password:</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={e => this.handleChange(e)}\n                />\n              </fieldset>\n            </div>\n            <input className=\"submit-signup\" type=\"submit\" value=\"Log in\" />\n          </form>\n\n          <p>{this.state.error ? \"Wrong username or password\" : \"\"}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.authentication.user,\n});\n\nexport default connect(mapStateToProps)(withRouter(Login));\n","import React from \"react\";\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars} from \"@fortawesome/free-solid-svg-icons\";\n\nconst StyledBurger = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  z-index: 10;\n\n  &:focus {\n    outline: none;\n  }\n\n  @media (min-width: 576px) {\n    display:none\n  }\n\n  div {\n    width: 2rem;\n    height: 0.25rem;\n    background: ${({ open }) => open ? '#0D0C1D' : '#EFFFFA'};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => open ? 'rotate(45deg)' : 'rotate(0)'};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => open ? '0' : '1'};\n      transform: ${({ open }) => open ? 'translateX(20px)' : 'translateX(0)'};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => open ? 'rotate(-45deg)' : 'rotate(0)'};\n    }\n  }\n`\n\nconst Burger = ({ open, setOpen }) => {\n  return (\n    <StyledBurger onClick={() => setOpen(!open)}>\n      <FontAwesomeIcon icon={faBars} size=\"3x\" />\n      <div />\n      <div />\n      <div />\n    </StyledBurger>\n  );\n};\n\nexport default Burger;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from \"react-router-dom\";\n\nconst StyledMenu = styled.nav`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background: #EFFFFA;\n  transform: ${({ open }) => open ? 'translateX(0)' : 'translateX(-100%)'};\n  height: 100vh;\n  text-align: left;\n  padding: 2rem;\n  position: absolute;\n  top: 0;\n  left: 0;\n  transition: transform 0.3s ease-in-out;\n\n  @media (max-width: 576px) {\n      width: 100%;\n    }\n\n  a {\n    font-size: 2rem;\n    text-transform: uppercase;\n    padding: 2rem 0;\n    font-weight: bold;\n    letter-spacing: 0.5rem;\n    color: #0D0C1D;\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    @media (max-width: 576px) {\n      font-size: 1.5rem;\n      text-align: center;\n    }\n\n    &:hover {\n      color: #343078;\n    }\n  }\n`\n\nconst Menu = ({ open, setOpen }) => {\n    return (\n      <StyledMenu open={open} onClick={() => setOpen(!open)}>\n        <Link className='link' to=\"/\">Home</Link>\n        <Link className='link' to=\"/favourites\">Favourites</Link>\n        <Link className='link' to=\"/edit\">Edit Restaurants</Link>\n      </StyledMenu>\n    )\n}\n\nexport default Menu;\n","import React from \"react\";\nimport Burger from \"../Burger/Burger\";\nimport Menu from \"../Menu/Menu\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUserCircle,\n  faSearch,\n  faSignOutAlt,\n  faHome,\n  faStar\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./NavBar.scss\";\n\nconst NavBar = ({ title, user, logout }) => {\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"container\">\n        <Burger open={open} setOpen={setOpen} />\n        <Menu open={open} setOpen={setOpen} />\n        <p>{title}</p>\n        <span className=\"icons\">\n        <Link className=\"link min-width\" to=\"/\">\n            <FontAwesomeIcon icon={faHome} size=\"3x\" />\n          </Link>\n          <Link className=\"link min-width\" to=\"/favourites\">\n            <FontAwesomeIcon icon={faStar} size=\"3x\" />\n          </Link>\n          <Link className=\"link\" to=\"/search\">\n            <FontAwesomeIcon icon={faSearch} size=\"3x\" />\n          </Link>\n        </span>\n        {user ? (\n          <FontAwesomeIcon icon={faSignOutAlt} size=\"3x\" onClick={logout} />\n        ) : (\n          <Link className=\"link\" to=\"/login\">\n            <FontAwesomeIcon icon={faUserCircle} size=\"3x\" />\n          </Link>\n        )}\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import axios from \"axios\";\n\nexport default class RestaurantsService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_URL}/restaurants`,\n      withCredentials: true\n    });\n  }\n\n  // search = (query) => {\n  //   return this.service.get(`/search?query=${query}`, { query })\n  //     .then(response => response.data)\n  // }\n\n  getAll = () => {\n    return this.service.get(`/restaurants`).then(response => response.data);\n  };\n\n  getOne = id => {\n    return this.service\n      .get(`/restaurant/${id}`)\n      .then(response => response.data);\n  };\n\n  newRestaurant = (\n    name,\n    neighborhood,\n    photograph,\n    location,\n    image,\n    cuisine_type,\n    timetable,\n    reviews\n  ) => {\n    return this.service\n      .post(`/new`, {\n        name,\n        neighborhood,\n        photograph,\n        location,\n        image,\n        cuisine_type,\n        timetable,\n        reviews\n      })\n      .then(response => response.data);\n  };\n\n  removeRestaurant = restaurant => {\n    return this.service\n      .post(`/remove`, { restaurant })\n      .then(response => response.data);\n  };\n\n  editRestaurant = (\n    id,\n    name,\n    neighborhood,\n    photograph,\n    location,\n    image,\n    cuisine_type,\n    timetable,\n    reviews\n  ) => {\n    return this.service\n      .post(`/edit/${id}`, {\n        name,\n        neighborhood,\n        photograph,\n        location,\n        image,\n        cuisine_type,\n        timetable,\n        reviews\n      })\n      .then(response => response.data);\n  };\n}\n","import axios from 'axios';\n\nexport default class LikesService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_URL}/likes`,\n      withCredentials: true\n    });\n  }\n\n  updateUserLike = updatedUserObj => {\n    return this.service\n      .post(`/updateLike`, {updatedUserObj})\n      .then(response => response.data);\n  };\n\n  removeUserLike = restaurant => {\n    return this.service\n      .post(`/removeLike`, {restaurant})\n      .then(response => response.data);\n  };\n\n}","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleUp,\n  faChevronCircleDown,\n  faCircle,\n  faCheckCircle\n} from \"@fortawesome/free-solid-svg-icons\";\nimport RestaurantsService from \"../../utils/RestaurantsService\";\nimport LikesService from \"../../utils/LikesService\";\nimport \"./RestaurantDetails.scss\";\n\nconst RestaurantDetails = ({ user }) => {\n  const params = useParams().restaurantId;\n  const restaurants = new RestaurantsService();\n  const likes = new LikesService();\n  const history = useHistory();\n  const [userLocal, setUser] = useState(user);\n  const [restaurant, setRestaurant] = useState({});\n  const [hidden, setHidden] = useState(true);\n  const [comments, setComments] = useState(false);\n  const [favourite, setFavourite] = useState(false);\n\n  let timetable = {};\n  let reviews = [];\n  let printReviews;\n  let daily;\n\n  useEffect(() => {\n    restaurants\n      .getOne(params)\n      .then(data => {\n        setRestaurant(data);\n        userLocal.likes.includes(data.id)\n          ? setFavourite(true)\n          : setFavourite(false)\n      })\n      .catch(e => console.log(e));\n\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (restaurant.reviews) {\n    timetable = restaurant.timetable;\n    reviews = restaurant.reviews;\n  }\n\n  if (reviews.length > 0) {\n    printReviews = reviews.map(el =>\n      Object.keys(el).map(key => {\n        if (key !== \"_id\") {\n          return <div className={key + \"-review\"}>{el[key]}</div>;\n        } else { return null }\n      })\n    );\n  }\n\n  if (timetable) {\n  daily = (\n    <ul>\n      {Object.keys(timetable).map( (key, i) => (\n        <li key={i}>\n          <span>{key + \": \"}</span>\n          {timetable[key]}\n        </li>\n      ))}\n    </ul>\n  );\n      }\n\n  const toggleButton = () => {\n    \n    if (!user) return history.push(\"/login\");\n    if (userLocal.likes.includes(restaurant.id)) {\n      likes\n        .removeUserLike(params)\n        .then(data => {\n          user = data;\n          setUser(data);\n          setFavourite(false);\n        })\n        .catch(e => console.log(e));\n    } else {\n      likes\n        .updateUserLike(params)\n        .then(data => {\n          user = data;\n          setUser(data)\n          setFavourite(true);\n        })\n        .catch(e => console.log(e));\n    }\n  };\n\n  if (!restaurant.image) return <div className=\"content spinner\"><div className=\"lds-hourglass\"></div></div>\n  return (\n    <div className=\"container-details\">\n      <div className=\"restaurant-name\">{restaurant.name}</div>\n      <div className=\"image-restaurant\">\n        <img src={`${restaurant.image}`} alt={`${restaurant.name}`} />\n      </div>\n      <div className=\"cuisine restaurant-name\">\n        Cuisine Type: {restaurant.cuisine_type}\n      </div>\n      <div\n        className=\"timetable restaurant-name\"\n        onClick={() => setHidden(!hidden)}\n      >\n        Timetable{\" \"}\n        {hidden ? (\n          <FontAwesomeIcon icon={faChevronCircleUp} />\n        ) : (\n          <FontAwesomeIcon icon={faChevronCircleDown} />\n        )}\n        {hidden ? \"\" : daily}\n      </div>\n      <div\n        className=\"reviews restaurant-name\"\n        onClick={() => setComments(!comments)}\n      >\n        Reviews{\" \"}\n        {!comments ? (\n          <FontAwesomeIcon icon={faChevronCircleUp} />\n        ) : (\n          <FontAwesomeIcon icon={faChevronCircleDown} />\n        )}\n      </div>\n      {comments ? <div className=\"review-comments\">{printReviews}</div> : \"\"}\n      <div\n        className={favourite ? \"favourite\" : \"restaurant-like unfavourite\"}\n        onClick={() => toggleButton()}\n      >\n        {favourite\n          ? \"Marked as Favourite \"\n          : \"Do you know it? Mark it as favourite \"}{\" \"}\n        {favourite ? (\n          <FontAwesomeIcon icon={faCheckCircle} />\n        ) : (\n          <FontAwesomeIcon icon={faCircle} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RestaurantDetails;\n","export const FETCH_DATA_REQUEST = \"FETCH_DATA_REQUEST\";\nexport const FETCH_DATA_SUCCESS = \"FETCH_DATA_SUCCESS\";\nexport const FETCH_DATA_ERROR = \"FETCH_DATA_ERROR\";\nexport const LOGIN_REQUEST = \"USERS_LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"USERS_LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"USERS_LOGIN_FAILURE\";\nexport const LOGOUT = \"USERS_LOGOUT\";\n","import AuthService from \"../utils/AuthService\";\nimport {\n  FETCH_DATA_REQUEST,\n  FETCH_DATA_SUCCESS,\n  FETCH_DATA_ERROR,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT\n} from \"./actionType\";\n\nexport function fetchDataRequest() {\n  return {\n    type: FETCH_DATA_REQUEST\n  };\n}\n\nexport function fetchDataSuccess(restaurant) {\n  return {\n    type: FETCH_DATA_SUCCESS,\n    restaurant\n  };\n}\n\nexport function fetchDataError(error) {\n  return {\n    type: FETCH_DATA_ERROR,\n    payload: { error }\n  };\n}\n\nexport function fetchUserRequest(user) {\n  return { \n    type: LOGIN_REQUEST,\n    user\n  };\n}\n\nexport function fetchUserSuccess(user) {\n  return {\n    type: LOGIN_SUCCESS,\n    user\n  };\n}\n\nexport function fetchUserFailure(error) {\n  return {\n    type: LOGIN_FAILURE,\n    error\n  };\n}\n\nexport function fetchUserLogout() {\n  let service = new AuthService();\n  service.logout();\n  return { type: LOGOUT\n  };\n}\n","import RestaurantsService from \"../utils/RestaurantsService\";\nimport { fetchDataRequest, fetchDataSuccess, fetchDataError } from \"./action\";\n\nlet service = new RestaurantsService();\n\nexport function fetchRestaurants() {\n  return dispatch => {\n    dispatch(fetchDataRequest());\n\n    service.getAll().then(\n      restaurants => {\n        dispatch(fetchDataSuccess(restaurants));\n      },\n      error => {\n        dispatch(fetchDataError(error));\n      }\n    );\n  };\n}\n\nexport function searchRestaurants(query) {\n  return dispatch => {\n    dispatch(fetchDataRequest({ query }));\n\n    service.search(query).then(\n      restaurants => {\n        dispatch(fetchDataSuccess(restaurants));\n      },\n      error => {\n        dispatch(fetchDataError(error));\n      }\n    );\n  };\n}\n\nexport function getRestaurant(id) {\n  return dispatch => {\n    dispatch(fetchDataRequest({ id }));\n\n    service.getOne(id).then(\n      restaurant => {\n        dispatch(fetchDataSuccess(restaurant));\n      },\n      error => {\n        dispatch(fetchDataError(error));\n      }\n    );\n  };\n}\n\nexport function newRestaurant(\n  name,\n  neighborhood,\n  photograph,\n  location,\n  image,\n  cuisine_type,\n  timetable,\n  reviews\n) {\n  return dispatch => {\n    dispatch(fetchDataRequest({ name }));\n\n    service\n      .newRestaurant(\n        name,\n        neighborhood,\n        photograph,\n        location,\n        image,\n        cuisine_type,\n        timetable,\n        reviews\n      )\n      .then(\n        restaurant => {\n          dispatch(fetchDataSuccess(restaurant));\n        },\n        error => {\n          dispatch(fetchDataError(error));\n        }\n      );\n  };\n}\n\nexport function removeRestaurant(id) {\n  return dispatch => {\n    dispatch(fetchDataRequest({ id }));\n\n    service.removeRestaurant(id).then(\n      restaurant => {\n        dispatch(fetchDataSuccess(restaurant));\n      },\n      error => {\n        dispatch(fetchDataError(error));\n      }\n    );\n  };\n}\n\nexport function editRestaurant(\n  id,\n  name,\n  neighborhood,\n  photograph,\n  location,\n  image,\n  cuisine_type,\n  timetable,\n  reviews\n) {\n  return dispatch => {\n    dispatch(fetchDataRequest({ name }));\n\n    service\n      .editRestaurant(\n        id,\n        name,\n        neighborhood,\n        photograph,\n        location,\n        image,\n        cuisine_type,\n        timetable,\n        reviews\n      )\n      .then(\n        restaurant => {\n          dispatch(fetchDataSuccess(restaurant));\n        },\n        error => {\n          dispatch(fetchDataError(error));\n        }\n      );\n  };\n}\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport \"./RestaurantPhoto.scss\"\n\nconst RestaurantPhoto = ({ place }) => {\n    return (\n        <div className=\"grid-photo-wrap flex\" >\n        <Link to={`/restaurant/${place.id}`} restaurant={place}>\n            {place.image ? <img src={place.image} alt={place.name} className=\"grid-photo\" /> : <div>{place.name}</div>}\n        </Link>\n    </div>\n    )\n}\n\nexport default RestaurantPhoto\n","import React from \"react\";\nimport RestaurantPhoto from \"../RestaurantPhoto/RestaurantPhoto\";\nimport { connect } from \"react-redux\";\nimport \"./RestaurantGrid.scss\";\n\nconst RestaurantGrid = ({ restaurants }) => {\n  \n  if (!restaurants[0])\n  return (\n    <div className=\"content spinner\">\n      <div className=\"lds-hourglass\"></div>\n    </div>\n  );\n  return (\n    <div className=\"container\">\n      <div className=\"restaurant-grid\">\n        {restaurants.map((place, i) => (\n          <RestaurantPhoto key={i} place={place} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  restaurants: state.products.restaurants\n});\n\nexport default connect(mapStateToProps)(RestaurantGrid);\n","import React, { useState } from \"react\";\nimport RestaurantPhoto from \"../RestaurantPhoto/RestaurantPhoto\";\nimport \"./Search.scss\"\n\nconst Search = ({ restaurants }) => {\n  const [search, setSearch] = useState(\"\");\n  let filteredRestaurants;\n\n  filteredRestaurants = restaurants.restaurants.filter(el =>\n    el.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        name=\"searchbar\"\n        placeholder=\"Search restaurants\"\n        className=\"searchbar\"\n        onChange={e => setSearch(e.target.value)}\n      />\n      <div className=\"container\">\n        <div className=\"restaurant-grid\">\n          {filteredRestaurants.map((place, i) => (\n            <RestaurantPhoto key={i} place={place} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from \"react\";\nimport RestaurantPhoto from \"../RestaurantPhoto/RestaurantPhoto\";\nimport \"./Favourites.scss\";\n\nconst FavouriteRestaurants = ({ restaurants, user }) => {\n  const [favourites, setFavourites] = useState([]);\n\n  useEffect(() => {\n    let list = [];\n\n    if (user) {\n      restaurants.restaurants.filter(el => {\n        return user.likes.includes(el.id) ? list.push(el) : []\n      });\n    }\n        setFavourites(list)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n\n\n  let render;\n\n  if (!user) {\n    render = (\n      <div className=\"container\">\n        <div className=\"no-user flex\">Log In to see favourite restaurants.</div>\n      </div>\n    );\n  }\n\n  if (user && favourites.length > 0) {\n    render = (\n      <div className=\"container\">\n        <div className=\"restaurant-grid\">\n          {favourites.map((place, i) => (\n            <RestaurantPhoto key={i} place={place} />\n          ))}\n        </div>\n      </div>\n    );\n  } else if (user && favourites.length <= 0) {\n    render = (\n      <div className=\"container\">\n        <div className=\"no-user flex\">No favourite restaurants yet.</div>\n      </div>\n    );\n  }\n\n  return <div>{render}</div>;\n};\n\nexport default FavouriteRestaurants;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Edit = ({ restaurants }) => {\n    const [search, setSearch] = useState(\"\");\n    let filteredRestaurants;\n  \n    filteredRestaurants = restaurants.filter(el =>\n      el.name.toLowerCase().includes(search.toLowerCase())\n    );\n\n  return (\n    <div className=\"container\">\n              <input\n        type=\"text\"\n        name=\"searchbar\"\n        placeholder=\"Search restaurants\"\n        className=\"searchbar\"\n        onChange={e => setSearch(e.target.value)}\n      />\n      <ul>\n        {filteredRestaurants.map((place, i) => (\n          <li key={i}>{place.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  restaurants: state.products.restaurants,\n  loading: state.products.loading,\n  error: state.products.error\n});\n\nexport default connect(mapStateToProps)(Edit);\n","import React, { Component } from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Signup from \"./Components/Auth/Signup\";\nimport Login from \"./Components/Auth/Login\";\nimport AuthService from \"./utils/AuthService\";\nimport \"./App.css\";\nimport NavBar from \"./Components/NavBar/NavBar\";\nimport RestaurantDetails from \"./Components/RestaurantDetails/RestaurantDetails\";\nimport { fetchRestaurants } from \"./actions/fetchData\";\nimport { connect } from \"react-redux\";\nimport RestaurantGrid from \"./Components/RestaurantGrid/RestaurantGrid\";\nimport Search from \"./Components/Search/Search\";\nimport FavouriteRestaurants from \"./Components/Favourites/Favourites\";\nimport Edit from \"./Components/Edit/Edit\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n    this.fetchUser();\n  }\n\n  componentDidMount() {\n    this.props.dispatch(fetchRestaurants());\n  }\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    });\n  };\n\n  logout = () => {\n    this.service\n      .logout()\n      .then(() => {\n        this.setState({ loggedInUser: null });\n      })\n      .catch(err => console.log(err));\n  };\n\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App app-container\">\n        <NavBar\n          title=\"Wherever Eat Takes\"\n          user={this.state.loggedInUser}\n          logout={() => this.logout()}\n        />\n        <div className=\"content\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <RestaurantGrid\n                  restaurants={this.props}\n                  getUser={this.getUser}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/signup\"\n              render={() => <Signup getUser={this.getUser} />}\n            />\n            <Route\n              exact\n              path=\"/login\"\n              render={() => <Login getUser={this.getUser} />}\n            />\n            <Route\n              exact\n              path=\"/restaurant/:restaurantId\"\n              render={() => (\n                <RestaurantDetails user={this.state.loggedInUser} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/search\"\n              render={() => (\n                <Search restaurants={this.props} getUser={this.getUser} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/favourites\"\n              render={() => (\n                <FavouriteRestaurants\n                  restaurants={this.props}\n                  user={this.state.loggedInUser}\n                />\n              )}\n            />\n            <Route exact path=\"/edit\" render={() => <Edit />} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.products.user,\n  restaurants: state.products.restaurants,\n  loading: state.products.loading,\n  error: state.products.error\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initialState = {\n    restaurants: [],\n    loading: false,\n    error: null\n  };\n  \n  function reducer(state = initialState, action) {\n    switch (action.type) {\n      case \"FETCH_DATA_REQUEST\":\n        return {\n          ...state,\n          loading: true,\n          error: null\n        };\n      case \"FETCH_DATA_SUCCESS\":\n        return {\n          ...state,\n          loading: false,\n          restaurants: action.restaurant\n        };\n      case \"FETCH_DATA_ERROR\":\n        return {\n          ...state,\n          loading: false,\n          error: action.payload.error,\n          restaurants: []\n        };\n      default:\n        return state;\n    }\n  }\n  \n  export default reducer;\n  ","let user = JSON.parse(localStorage.getItem(\"user\"));\nconst initialState = user ? { loggedIn: true, user } : {};\n\nexport default function authentication(state = initialState, action) {\n  switch (action.type) {\n    case \"USERS_LOGIN_REQUEST\":\n      return {\n        loggingIn: true,\n        user: action.user\n      };\n    case \"USERS_LOGIN_SUCCESS\":\n      return {\n        loggedIn: true,\n        user: action.user\n      };\n    case \"USERS_LOGIN_FAILURE\":\n      return {};\n    case \"USERS_LOGOUT\":\n      return {};\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport products from \"./reducers\";\nimport authentication from \"./auth-reducers\";\n\nexport default combineReducers({\n  authentication,\n  products\n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/rootReducers\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}